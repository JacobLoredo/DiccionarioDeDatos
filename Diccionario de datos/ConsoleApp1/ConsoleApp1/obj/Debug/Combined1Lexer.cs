//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\yeico\source\repos\ConsoleApp1\ConsoleApp1\Combined1.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace ConsoleApp1 {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class Combined1Lexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		DirectivaB=32, Directiva=33, CONSH=34, CONSC=35, SL=36, Decimal=37, Hexadecimal=38, 
		Simbolo=39, Palabra=40, WS=41;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "DirectivaB", "Directiva", 
		"CONSH", "CONSC", "SL", "Decimal", "Hexadecimal", "Simbolo", "Palabra", 
		"WS"
	};


	public Combined1Lexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'START'", "','", "'X'", "'RSUB'", "'END'", "'ADD'", "'AND'", "'COMP'", 
		"'DIV'", "'J'", "'RESW'", "'JEQ'", "'JGT'", "'JLT'", "'JSUB'", "'LDA'", 
		"'LDCH'", "'LDL'", "'LDX'", "'MUL'", "'OR'", "'RD'", "'STA'", "'STCH'", 
		"'STL'", "'STSW'", "'STX'", "'SUB'", "'TD'", "'TIX'", "'WD'", "'BYTE'", 
		null, null, null, "'\n'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, "DirectivaB", "Directiva", 
		"CONSH", "CONSC", "SL", "Decimal", "Hexadecimal", "Simbolo", "Palabra", 
		"WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Combined1.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public override void Action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 40 : WS_action(_localctx, actionIndex); break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: Skip(); break;
		}
	}

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2+\x10D\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t)\x4*\t"+
		"*\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3"+
		"\x5\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\b"+
		"\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v"+
		"\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE"+
		"\x3\xF\x3\xF\x3\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x11\x3"+
		"\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12\x3\x12\x3\x12\x3\x13\x3\x13\x3"+
		"\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3\x15\x3"+
		"\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18\x3\x18\x3"+
		"\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x3"+
		"\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3"+
		"\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3 \x3 \x3"+
		" \x3!\x3!\x3!\x3!\x3!\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3"+
		"\"\x3\"\x3\"\x5\"\xE2\n\"\x3#\x3#\x3#\x3#\x3#\x3$\x3$\x3$\x3$\x3$\x3%"+
		"\x3%\x3&\x6&\xF1\n&\r&\xE&\xF2\x3\'\x6\'\xF6\n\'\r\'\xE\'\xF7\x3\'\x5"+
		"\'\xFB\n\'\x3(\x6(\xFE\n(\r(\xE(\xFF\x3)\x6)\x103\n)\r)\xE)\x104\x3*\x6"+
		"*\x108\n*\r*\xE*\x109\x3*\x3*\x2\x2\x2+\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2"+
		"\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE"+
		"\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2"+
		"\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D"+
		"\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&K\x2\'"+
		"M\x2(O\x2)Q\x2*S\x2+\x3\x2\a\x3\x2\x32;\x5\x2\x32;\x43H\x63h\x4\x2JJj"+
		"j\x4\x2\x43\\\x63|\x5\x2\v\f\xF\xF\"\"\x114\x2\x3\x3\x2\x2\x2\x2\x5\x3"+
		"\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2"+
		"\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15"+
		"\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2"+
		"\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2"+
		"\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-"+
		"\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2"+
		"\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2"+
		"\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2"+
		"\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2"+
		"M\x3\x2\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3\x2\x2\x2\x3U\x3\x2"+
		"\x2\x2\x5[\x3\x2\x2\x2\a]\x3\x2\x2\x2\t_\x3\x2\x2\x2\v\x64\x3\x2\x2\x2"+
		"\rh\x3\x2\x2\x2\xFl\x3\x2\x2\x2\x11p\x3\x2\x2\x2\x13u\x3\x2\x2\x2\x15"+
		"y\x3\x2\x2\x2\x17{\x3\x2\x2\x2\x19\x80\x3\x2\x2\x2\x1B\x84\x3\x2\x2\x2"+
		"\x1D\x88\x3\x2\x2\x2\x1F\x8C\x3\x2\x2\x2!\x91\x3\x2\x2\x2#\x95\x3\x2\x2"+
		"\x2%\x9A\x3\x2\x2\x2\'\x9E\x3\x2\x2\x2)\xA2\x3\x2\x2\x2+\xA6\x3\x2\x2"+
		"\x2-\xA9\x3\x2\x2\x2/\xAC\x3\x2\x2\x2\x31\xB0\x3\x2\x2\x2\x33\xB5\x3\x2"+
		"\x2\x2\x35\xB9\x3\x2\x2\x2\x37\xBE\x3\x2\x2\x2\x39\xC2\x3\x2\x2\x2;\xC6"+
		"\x3\x2\x2\x2=\xC9\x3\x2\x2\x2?\xCD\x3\x2\x2\x2\x41\xD0\x3\x2\x2\x2\x43"+
		"\xE1\x3\x2\x2\x2\x45\xE3\x3\x2\x2\x2G\xE8\x3\x2\x2\x2I\xED\x3\x2\x2\x2"+
		"K\xF0\x3\x2\x2\x2M\xF5\x3\x2\x2\x2O\xFD\x3\x2\x2\x2Q\x102\x3\x2\x2\x2"+
		"S\x107\x3\x2\x2\x2UV\aU\x2\x2VW\aV\x2\x2WX\a\x43\x2\x2XY\aT\x2\x2YZ\a"+
		"V\x2\x2Z\x4\x3\x2\x2\x2[\\\a.\x2\x2\\\x6\x3\x2\x2\x2]^\aZ\x2\x2^\b\x3"+
		"\x2\x2\x2_`\aT\x2\x2`\x61\aU\x2\x2\x61\x62\aW\x2\x2\x62\x63\a\x44\x2\x2"+
		"\x63\n\x3\x2\x2\x2\x64\x65\aG\x2\x2\x65\x66\aP\x2\x2\x66g\a\x46\x2\x2"+
		"g\f\x3\x2\x2\x2hi\a\x43\x2\x2ij\a\x46\x2\x2jk\a\x46\x2\x2k\xE\x3\x2\x2"+
		"\x2lm\a\x43\x2\x2mn\aP\x2\x2no\a\x46\x2\x2o\x10\x3\x2\x2\x2pq\a\x45\x2"+
		"\x2qr\aQ\x2\x2rs\aO\x2\x2st\aR\x2\x2t\x12\x3\x2\x2\x2uv\a\x46\x2\x2vw"+
		"\aK\x2\x2wx\aX\x2\x2x\x14\x3\x2\x2\x2yz\aL\x2\x2z\x16\x3\x2\x2\x2{|\a"+
		"T\x2\x2|}\aG\x2\x2}~\aU\x2\x2~\x7F\aY\x2\x2\x7F\x18\x3\x2\x2\x2\x80\x81"+
		"\aL\x2\x2\x81\x82\aG\x2\x2\x82\x83\aS\x2\x2\x83\x1A\x3\x2\x2\x2\x84\x85"+
		"\aL\x2\x2\x85\x86\aI\x2\x2\x86\x87\aV\x2\x2\x87\x1C\x3\x2\x2\x2\x88\x89"+
		"\aL\x2\x2\x89\x8A\aN\x2\x2\x8A\x8B\aV\x2\x2\x8B\x1E\x3\x2\x2\x2\x8C\x8D"+
		"\aL\x2\x2\x8D\x8E\aU\x2\x2\x8E\x8F\aW\x2\x2\x8F\x90\a\x44\x2\x2\x90 \x3"+
		"\x2\x2\x2\x91\x92\aN\x2\x2\x92\x93\a\x46\x2\x2\x93\x94\a\x43\x2\x2\x94"+
		"\"\x3\x2\x2\x2\x95\x96\aN\x2\x2\x96\x97\a\x46\x2\x2\x97\x98\a\x45\x2\x2"+
		"\x98\x99\aJ\x2\x2\x99$\x3\x2\x2\x2\x9A\x9B\aN\x2\x2\x9B\x9C\a\x46\x2\x2"+
		"\x9C\x9D\aN\x2\x2\x9D&\x3\x2\x2\x2\x9E\x9F\aN\x2\x2\x9F\xA0\a\x46\x2\x2"+
		"\xA0\xA1\aZ\x2\x2\xA1(\x3\x2\x2\x2\xA2\xA3\aO\x2\x2\xA3\xA4\aW\x2\x2\xA4"+
		"\xA5\aN\x2\x2\xA5*\x3\x2\x2\x2\xA6\xA7\aQ\x2\x2\xA7\xA8\aT\x2\x2\xA8,"+
		"\x3\x2\x2\x2\xA9\xAA\aT\x2\x2\xAA\xAB\a\x46\x2\x2\xAB.\x3\x2\x2\x2\xAC"+
		"\xAD\aU\x2\x2\xAD\xAE\aV\x2\x2\xAE\xAF\a\x43\x2\x2\xAF\x30\x3\x2\x2\x2"+
		"\xB0\xB1\aU\x2\x2\xB1\xB2\aV\x2\x2\xB2\xB3\a\x45\x2\x2\xB3\xB4\aJ\x2\x2"+
		"\xB4\x32\x3\x2\x2\x2\xB5\xB6\aU\x2\x2\xB6\xB7\aV\x2\x2\xB7\xB8\aN\x2\x2"+
		"\xB8\x34\x3\x2\x2\x2\xB9\xBA\aU\x2\x2\xBA\xBB\aV\x2\x2\xBB\xBC\aU\x2\x2"+
		"\xBC\xBD\aY\x2\x2\xBD\x36\x3\x2\x2\x2\xBE\xBF\aU\x2\x2\xBF\xC0\aV\x2\x2"+
		"\xC0\xC1\aZ\x2\x2\xC1\x38\x3\x2\x2\x2\xC2\xC3\aU\x2\x2\xC3\xC4\aW\x2\x2"+
		"\xC4\xC5\a\x44\x2\x2\xC5:\x3\x2\x2\x2\xC6\xC7\aV\x2\x2\xC7\xC8\a\x46\x2"+
		"\x2\xC8<\x3\x2\x2\x2\xC9\xCA\aV\x2\x2\xCA\xCB\aK\x2\x2\xCB\xCC\aZ\x2\x2"+
		"\xCC>\x3\x2\x2\x2\xCD\xCE\aY\x2\x2\xCE\xCF\a\x46\x2\x2\xCF@\x3\x2\x2\x2"+
		"\xD0\xD1\a\x44\x2\x2\xD1\xD2\a[\x2\x2\xD2\xD3\aV\x2\x2\xD3\xD4\aG\x2\x2"+
		"\xD4\x42\x3\x2\x2\x2\xD5\xD6\aT\x2\x2\xD6\xD7\aG\x2\x2\xD7\xD8\aU\x2\x2"+
		"\xD8\xE2\aY\x2\x2\xD9\xDA\aT\x2\x2\xDA\xDB\aG\x2\x2\xDB\xDC\aU\x2\x2\xDC"+
		"\xE2\a\x44\x2\x2\xDD\xDE\aY\x2\x2\xDE\xDF\aQ\x2\x2\xDF\xE0\aT\x2\x2\xE0"+
		"\xE2\a\x46\x2\x2\xE1\xD5\x3\x2\x2\x2\xE1\xD9\x3\x2\x2\x2\xE1\xDD\x3\x2"+
		"\x2\x2\xE2\x44\x3\x2\x2\x2\xE3\xE4\aZ\x2\x2\xE4\xE5\a)\x2\x2\xE5\xE6\x5"+
		"M\'\x2\xE6\xE7\a)\x2\x2\xE7\x46\x3\x2\x2\x2\xE8\xE9\a\x45\x2\x2\xE9\xEA"+
		"\a)\x2\x2\xEA\xEB\x5Q)\x2\xEB\xEC\a)\x2\x2\xECH\x3\x2\x2\x2\xED\xEE\a"+
		"\f\x2\x2\xEEJ\x3\x2\x2\x2\xEF\xF1\t\x2\x2\x2\xF0\xEF\x3\x2\x2\x2\xF1\xF2"+
		"\x3\x2\x2\x2\xF2\xF0\x3\x2\x2\x2\xF2\xF3\x3\x2\x2\x2\xF3L\x3\x2\x2\x2"+
		"\xF4\xF6\t\x3\x2\x2\xF5\xF4\x3\x2\x2\x2\xF6\xF7\x3\x2\x2\x2\xF7\xF5\x3"+
		"\x2\x2\x2\xF7\xF8\x3\x2\x2\x2\xF8\xFA\x3\x2\x2\x2\xF9\xFB\t\x4\x2\x2\xFA"+
		"\xF9\x3\x2\x2\x2\xFA\xFB\x3\x2\x2\x2\xFBN\x3\x2\x2\x2\xFC\xFE\t\x5\x2"+
		"\x2\xFD\xFC\x3\x2\x2\x2\xFE\xFF\x3\x2\x2\x2\xFF\xFD\x3\x2\x2\x2\xFF\x100"+
		"\x3\x2\x2\x2\x100P\x3\x2\x2\x2\x101\x103\t\x5\x2\x2\x102\x101\x3\x2\x2"+
		"\x2\x103\x104\x3\x2\x2\x2\x104\x102\x3\x2\x2\x2\x104\x105\x3\x2\x2\x2"+
		"\x105R\x3\x2\x2\x2\x106\x108\t\x6\x2\x2\x107\x106\x3\x2\x2\x2\x108\x109"+
		"\x3\x2\x2\x2\x109\x107\x3\x2\x2\x2\x109\x10A\x3\x2\x2\x2\x10A\x10B\x3"+
		"\x2\x2\x2\x10B\x10C\b*\x2\x2\x10CT\x3\x2\x2\x2\n\x2\xE1\xF2\xF7\xFA\xFF"+
		"\x104\x109\x3\x3*\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace ConsoleApp1
